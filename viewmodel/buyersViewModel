//tinsoft:Hidemyass2@ds030500.mlab.com:30500/tinstore
var bodyParser = require("body-parser");
var urlencodedParser = bodyParser.urlencoded({extended:false});
var mongoose =require("mongoose");
mongoose.connect('mongodb://uuucmrm9fp3tqciemmgr:O4wSkGwPbhhFbxFesQuP@bnqwzhcnme3b8l9-mongodb.services.clever-cloud.com:27017/bnqwzhcnme3b8l9');
var buyerSchema = new mongoose.Schema({
    fullname:String,
    email:String,
    password:String,
    gender:String,
    phone:Number,
    address:String,
    state:String,
    country:String,
    active:Boolean,
    createdAt: {type: Date, default: Date.now}
    });
    
var  Todo = mongoose.model('Buyers',buyerSchema); 
/* var itemOne = Todo({fullname:"Adeleke Rukayat",
                    
                    email:"adeleke@gmail.com",
                    password:"@Hidemyass2",
                   
                    gender:"Female",
                    phone:09065345678,
                    address:"No 16 odoona complex ibadan",
                    state:"oyo",
                    country:"Nigeria",
                   
                    status:true}).save(function(err){
            if (err) throw err;
             console.log('buyer saved');
}); */
module.exports = function (app) {
    //show all stores
    app.get("/api/buyers",function(req,res){
        Todo.find({},function(err,data){
            if (err) throw err;
            res.send({buyers:data});
console.log({buyers:data});
        }).sort({"createdAt":-1})
    
    }); 
//show a single store /search for store
    app.get("/api/buyers/:email",function(req,res){
        Todo.find({email:req.params.email.replace(/\-/g," ")},function(err,data){
            if (err) throw err;
            res.send({buyers:data});
//console.log({storename:req.params.name});
        })
    
    }); 
    app.post("/api/buyers/login",urlencodedParser,function(req,res){
        // data.push(req.body);
        // res.json(data);
       
        Todo.findOne({$and:[{email:req.body.email.replace(/\-/g," ")},{password:req.body.password.replace(/\-/g," ")}]},function(err,data){
            if (err) throw err;
            if(data==null){
                var response = {
                    "result":{
                     "responsecode":0,   
                     "status":"Login Error"
                    }
                 }
            }
            else{
                var response = {
                   "result":{
                    "responsecode":1,
                    "status":"Login Successfull"
                   }
                }
            }
            res.json(response);
//console.log({storename:req.params.name});
        })
         // console.log({todos:req.body});
     }); 
//create a store
    app.post("/api/buyers/create",urlencodedParser,function(req,res){
       // data.push(req.body);
       // res.json(data);
       Todo.findOne({$and:[{email:req.body.email.replace(/\-/g," ")}]},function(err,data){
        if (err) throw err;
        if(data==null){
            Todo(req.body).save(function(err,data){
                if (err) throw err;
                var response = {
                    "result":{
                    "responsecode":1,
                     "status":"Saved Successfully"
                    }
                 }
                 res.json(response);
                });
        }
        else{
            var response = {
               "result":{
                "responsecode":0,
                "status":"User Exist Already"
               }
            }
            res.json(response);
        }
       
//console.log({storename:req.params.name});
    })
       
       
       // console.log({todos:req.body});
    }); 
// delete a store
    app.delete("/api/buyers/:email",function(req,res){
        Todo.find({email:req.params.email.replace(/\-/g," ")}).remove(function(err,data){

            if (err) throw err;
            res.json(data)
            
            
            })
        });

        //update
   app.put("/api/buyers/:id",urlencodedParser,function(req,res){
            Todo.findById(req.params.id.replace(/\-/g," "),function(err,data){
    
                if (err) throw err;
                if(data == null)
                    {
                        var response = {
                            "result":{
                             "responsecode":0,
                             "status":"User not found"
                            }
                         }
                         res.json(response);
                    }
                    else
                    {
                        
                        data.fullname = req.body.fullname;
                        data.email = req.body.email;
                        data.phone = req.body.phone;
                        data.address = req.body.address;
                        data.state = req.body.state;
                        data.country = req.body.country;
                        data.status = req.body.status;
                       
                        data.save(function(err) {
                        if (err)
                        res.send(err);
                        var response = {
                            "result":{
                             "responsecode":1,
                             "status":"Details Updated Successfully"
                            }
                         }
                         res.json(response);
                       // res.json(data);
                    
                
              
               
                
                
                });
            }
            });
         
          
                
                app.put("/api/buyers/updatepassword/:id",urlencodedParser,function(req,res){
                    // data.push(req.body);
                    // res.json(data);
                    Todo.findById(req.params.id.replace(/\-/g," "),function(err,data){
                     if (err) throw err;
                     if(data==null){
                        var response = {
                            "result":{
                            "responsecode":0,
                             "status":"not found"
                            }
                         }
                         res.json(response);
                     }
                     else{
                        data.password = req.body.password;
                    
                        data.save(function(err) {
                        if (err)
                        res.send(err);
                        var response = {
                            "result":{
                                "responsecode":1,
                             "status":"updated"
                            }
                         }
                         res.json(response);
                    
                    });
                     }
                    
             //console.log({storename:req.params.name});
                 })
                    
                    
                    // console.log({todos:req.body});
                 });         

       //
      //  res.render("todo",{todos:data});
                });    
}
